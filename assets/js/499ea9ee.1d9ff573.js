"use strict";(self.webpackChunknick_blog=self.webpackChunknick_blog||[]).push([[742],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,i=function(t,e){if(null==t)return{};var a,n,i={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var s=n.createContext({}),g=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},u=function(t){var e=g(t.components);return n.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var a=t.components,i=t.mdxType,l=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),p=g(a),m=i,d=p["".concat(s,".").concat(m)]||p[m]||c[m]||l;return a?n.createElement(d,r(r({ref:e},u),{},{components:a})):n.createElement(d,r({ref:e},u))}));function m(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var l=a.length,r=new Array(l);r[0]=p;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:i,r[1]=o;for(var g=2;g<l;g++)r[g]=a[g];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8096:function(t,e,a){a.r(e),a.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return g},toc:function(){return c}});var n=a(7462),i=a(3366),l=(a(7294),a(3905)),r=["components"],o={sidebar_position:1,title:"Git - \u6307\u4ee4"},s=void 0,g={unversionedId:"tool/Git-command",id:"tool/Git-command",title:"Git - \u6307\u4ee4",description:"git \u66ab\u5b58",source:"@site/docs/tool/Git-command.md",sourceDirName:"tool",slug:"/tool/Git-command",permalink:"/docs/tool/Git-command",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/tool/Git-command.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Git - \u6307\u4ee4"},sidebar:"tutorialSidebar",previous:{title:"Translate your site",permalink:"/docs/record/docusaurus/translate-your-site"},next:{title:"Git - \u60c5\u5883",permalink:"/docs/tool/Git-condition"}},u={},c=[{value:"&gt; git \u66ab\u5b58",id:"-git-\u66ab\u5b58",level:3},{value:"&gt; git rebase",id:"-git-rebase",level:3},{value:"&gt; git \u9000\u56de\u7248\u672c",id:"-git-\u9000\u56de\u7248\u672c",level:3},{value:"&gt; git pull \u9060\u7aef\u5206\u652f",id:"-git-pull-\u9060\u7aef\u5206\u652f",level:3},{value:"&gt; git push \u9060\u7aef\u5206\u4e4b",id:"-git-push-\u9060\u7aef\u5206\u4e4b",level:3},{value:"&gt; git \u5ffd\u7565\u500b\u4eba\u8a2d\u5b9a",id:"-git-\u5ffd\u7565\u500b\u4eba\u8a2d\u5b9a",level:3},{value:"&gt; git \u9000\u56decommit",id:"-git-\u9000\u56decommit",level:3},{value:"&gt; git ignore \u7522\u751f\u5668",id:"-git-ignore-\u7522\u751f\u5668",level:3},{value:"&gt; git alias",id:"-git-alias",level:3}],p={toc:c};function m(t){var e=t.components,a=(0,i.Z)(t,r);return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"-git-\u66ab\u5b58"},"> git \u66ab\u5b58"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u60c5\u6cc1: \u7576")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git stash\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git stash pop\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git stash list\n")),(0,l.kt)("h3",{id:"-git-rebase"},"> git rebase"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6574\u7406\u7dda\u689d\u7528\u7684")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git rebase --onto f92fbb4d73b017d9e610bb33bf0b4ab413dce184 a031b5344a532ed2d5a55f319d1a809bb27de9a2 a4a4b73a770a047bcbbc1d3a3375a49f8ab300df\n")),(0,l.kt)("h3",{id:"-git-\u9000\u56de\u7248\u672c"},"> git \u9000\u56de\u7248\u672c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git reset --hard XXXXXX\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"XXXX\u70ba\u7248\u672c\u865f"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--hard"),": \u53ef\u4ee5\u4e7e\u6de8\u7684\u56de\u5230\u7576\u521d\u90a3\u4e00\u7248(\u5982\u679c\u6c92\u6709\u52a0, \u6703\u628a\u76ee\u6a19\u7248\u672c\u4e4b\u5f8c\u65b0\u7684\u90fd\u8b8a\u6210 un-staged file)")),(0,l.kt)("h3",{id:"-git-pull-\u9060\u7aef\u5206\u652f"},"> git pull \u9060\u7aef\u5206\u652f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout --track origin/daves_branch\n")),(0,l.kt)("h3",{id:"-git-push-\u9060\u7aef\u5206\u4e4b"},"> git push \u9060\u7aef\u5206\u4e4b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git push -u origin <new_branch>\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"-u: --set-upstream\xa0\uff08\u8ffd\u8e64\u9019\u500b\u5206\u652f\uff0c\u4e4b\u5f8c\u624d\u53ef\u4ee5\u53ea\u8981\u7528git push\u7c21\u55ae\u6307\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4e0a\u50b3\u5230\u60f3\u8981\u7684\u9060\u7aef\u5206\u652f\uff09")),(0,l.kt)("h3",{id:"-git-\u5ffd\u7565\u500b\u4eba\u8a2d\u5b9a"},"> git \u5ffd\u7565\u500b\u4eba\u8a2d\u5b9a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git update-index --assume-unchanged\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c3\u8003\u6587\u7ae0: ",(0,l.kt)("a",{parentName:"li",href:"https://dev.to/nishina555/how-to-ignore-files-already-managed-with-git-locally-19oo"},"How to ignore files already managed with Git locally - DEV Community \ud83d\udc69\u200d\ud83d\udcbb\ud83d\udc68\u200d\ud83d\udcbb"))),(0,l.kt)("h3",{id:"-git-\u9000\u56decommit"},"> git \u9000\u56decommit"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"git reset e12d8ef\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u89e3\u9664\u6389",(0,l.kt)("inlineCode",{parentName:"li"},"e12d8ef"),"\u7684commit")),(0,l.kt)("h3",{id:"-git-ignore-\u7522\u751f\u5668"},"> git ignore \u7522\u751f\u5668"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://www.gitignore.io/"},"Gitignore.io"))),(0,l.kt)("h3",{id:"-git-alias"},"> git alias"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u52a0\u5230 \u4f60\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},".bashrc")," or ",(0,l.kt)("inlineCode",{parentName:"li"},".zshrc")," \u4f86\u505ashort cut \u4f7f\u7528"),(0,l.kt)("li",{parentName:"ul"},"\u9069\u5408\u5e38\u7528 terminal \u4e0b git \u6307\u4ee4\u7684\u4eba"),(0,l.kt)("li",{parentName:"ul"},"\u500b\u4eba\u5e38\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"gs"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"gco"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"gcm"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# ----------------------\n# Git Aliases\n# ----------------------\nalias ga='git add'\nalias gaa='git add .'\nalias gaaa='git add --all'\nalias gau='git add --update'\nalias gb='git branch'\nalias gbd='git branch --delete '\nalias gc='git commit'\nalias gcm='git commit --message'\nalias gcf='git commit --fixup'\nalias gco='git checkout'\nalias gcob='git checkout -b'\nalias gcom='git checkout master'\nalias gcos='git checkout staging'\nalias gcod='git checkout develop'\nalias gd='git diff'\nalias gda='git diff HEAD'\nalias gi='git init'\nalias glg='git log --graph --oneline --decorate --all'\nalias gld='git log --pretty=format:\"%h %ad %s\" --date=short --all'\nalias gm='git merge --no-ff'\nalias gma='git merge --abort'\nalias gmc='git merge --continue'\nalias gp='git pull'\nalias gpr='git pull --rebase'\nalias gr='git rebase'\nalias gs='git status'\nalias gss='git status --short'\nalias gst='git stash'\nalias gsta='git stash apply'\nalias gstd='git stash drop'\nalias gstl='git stash list'\nalias gstp='git stash pop'\nalias gsts='git stash save'\n\n# ----------------------\n# Git Functions\n# ----------------------\n# Git log find by commit message\nfunction glf() { git log --all --grep=\"$1\"; }\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://jonsuh.com/blog/git-command-line-shortcuts/"},"Reference"))))}m.isMDXComponent=!0}}]);