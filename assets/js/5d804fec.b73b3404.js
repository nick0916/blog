"use strict";(self.webpackChunknick_blog=self.webpackChunknick_blog||[]).push([[5120],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return b}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=s(n),b=r,k=d["".concat(p,".").concat(b)]||d[b]||u[b]||o;return n?i.createElement(k,l(l({ref:t},c),{},{components:n})):i.createElement(k,l({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var s=2;s<o;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6064:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return u}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],a={sidebar_position:1,title:"\u7269\u4ef6\u5c0e\u5411\u7a0b\u5f0f\u8a2d\u8a08\u57fa\u672c\u539f\u5247 - SOLID"},p=void 0,s={unversionedId:"DesignPattern/Redis",id:"DesignPattern/Redis",title:"\u7269\u4ef6\u5c0e\u5411\u7a0b\u5f0f\u8a2d\u8a08\u57fa\u672c\u539f\u5247 - SOLID",description:"S: Single responsibility principle(SRP) \u55ae\u4e00\u8077\u8cac",source:"@site/docs/DesignPattern/Redis.md",sourceDirName:"DesignPattern",slug:"/DesignPattern/Redis",permalink:"/docs/DesignPattern/Redis",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/DesignPattern/Redis.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"\u7269\u4ef6\u5c0e\u5411\u7a0b\u5f0f\u8a2d\u8a08\u57fa\u672c\u539f\u5247 - SOLID"},sidebar:"tutorialSidebar",previous:{title:"SQL",permalink:"/docs/Database/SQL"}},c={},u=[{value:"S: Single responsibility principle(SRP) \u55ae\u4e00\u8077\u8cac",id:"s-single-responsibility-principlesrp-\u55ae\u4e00\u8077\u8cac",level:2},{value:"\u5b9a\u7fa9",id:"\u5b9a\u7fa9",level:3},{value:"O: Open/close principle(OCP) \u958b\u653e/\u5c01\u9589\u539f\u5247",id:"o-openclose-principleocp-\u958b\u653e\u5c01\u9589\u539f\u5247",level:2},{value:"\u5b9a\u7fa9",id:"\u5b9a\u7fa9-1",level:3},{value:"L: Liskov substitution principle(LSP) Liskov\u66ff\u63db",id:"l-liskov-substitution-principlelsp-liskov\u66ff\u63db",level:2},{value:"\u5b9a\u7fa9",id:"\u5b9a\u7fa9-2",level:3},{value:"I: Interface Segregation Principle(ISP) \u4ecb\u9762\u9694\u96e2",id:"i-interface-segregation-principleisp-\u4ecb\u9762\u9694\u96e2",level:2},{value:"\u5b9a\u7fa9",id:"\u5b9a\u7fa9-3",level:3},{value:"D: Dependency Inversion Principle(DIP) \u4f9d\u8cf4\u53cd\u8f49",id:"d-dependency-inversion-principledip-\u4f9d\u8cf4\u53cd\u8f49",level:2},{value:"\u5b9a\u7fa9",id:"\u5b9a\u7fa9-4",level:3}],d={toc:u};function b(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"s-single-responsibility-principlesrp-\u55ae\u4e00\u8077\u8cac"},"S: Single responsibility principle(SRP) \u55ae\u4e00\u8077\u8cac"),(0,o.kt)("h3",{id:"\u5b9a\u7fa9"},"\u5b9a\u7fa9"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Each class in your system should have only one responsibility"),(0,o.kt)("h3",{parentName:"blockquote",id:"\u6982\u5ff5"},"\u6982\u5ff5"),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"\u4e00\u500bclass\u53ea\u9700\u5be6\u4f5c\u4e00\u7a2e\u529f\u80fd\uff0c\u4f86\u5be6\u73fe\u55ae\u4e00\u8077\u8cac"),(0,o.kt)("li",{parentName:"ul"},"\u5fc5\u9808\u8981\u77e5\u9053\u54ea\u4e9b\u662f\u672a\u4f86\u5f88\u53ef\u80fd\u6703\u767c\u751f\u7684\u6539\u8b8a \u54ea\u4e9b\u5728\u672a\u4f86\u5e7e\u4e4e\u4e0d\u6703\u6539\u8b8a",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u5c07\u6709\u53ef\u80fd\u6703\u767c\u751f\u6539\u8b8a\u7684\uff0c\u5207\u5272\u51fa\u53bb"))),(0,o.kt)("li",{parentName:"ul"},"\u73fe\u5be6\u751f\u6d3b\u4e2d\u5f88\u5e38\u51fa\u73fe \u56e0\u70ba\u51fd\u5f0f\u8ddf\u51fd\u5f0f\u4e4b\u9593\u904e\u5ea6\u8026\u5408(coupled) \u6240\u4ee5\u5e38\u5e38\u4e00\u500b\u5c0f\u6539\u52d5\u6703\u51fa\u73fe\u5f88\u591a\u526f\u4f5c\u7528(side effect)"))),(0,o.kt)("h2",{id:"o-openclose-principleocp-\u958b\u653e\u5c01\u9589\u539f\u5247"},"O: Open/close principle(OCP) \u958b\u653e/\u5c01\u9589\u539f\u5247"),(0,o.kt)("h3",{id:"\u5b9a\u7fa9-1"},"\u5b9a\u7fa9"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification."),(0,o.kt)("h3",{parentName:"blockquote",id:"\u6982\u5ff5-1"},"\u6982\u5ff5"),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"\u958b\u653e/\u5c01\u9589\u539f\u5247\u5c31\u5982\u540c\u5b57\u9762\u4e0a\u7684\u610f\u601d\uff0c\u958b\u653e\u65b0\u589e\u529f\u80fd\uff0c\u5c01\u9589\u4fee\u6539\u5176\u4ed6\u4e0d\u76f8\u95dc\u7684\u529f\u80fd\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u4fdd\u7559\u4f9d\u7167\u60c5\u5883\u5f48\u6027\u4fee\u6539\u7a0b\u5f0f\u4e00\u7a2e\u6a21\u5f0f"),(0,o.kt)("li",{parentName:"ul"},"\u4e00\u500b\u6070\u7576\u7684\u62bd\u8c61 \u53ef\u4ee5\u8b93\u4f60\u7684\u67b6\u69cb\u591a\u51fa\u8a31\u591a\u7684\u5f48\u6027"))),(0,o.kt)("h2",{id:"l-liskov-substitution-principlelsp-liskov\u66ff\u63db"},"L: Liskov substitution principle(LSP) Liskov\u66ff\u63db"),(0,o.kt)("h3",{id:"\u5b9a\u7fa9-2"},"\u5b9a\u7fa9"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If S is a subtype of T, then objects of type T may be replaced with objects of type S without altering any of the desirable properties of the program (correctness, task performed, etc.)\n\u9019\u610f\u601d\u5c31\u662f\u8aaa \u5982\u679c\u4f60\u7a0b\u5f0f\u78bc\u4e2d\u7684\u985e\u5225T\u7684\u7269\u4ef6 \u90fd\u53ef\u4ee5\u88ab\u4e00\u500b\u985e\u5225S\u7684\u7269\u4ef6\u7d66\u53d6\u4ee3 \u800c\u4e14\u7a0b\u5f0f\u78bc\u9084\u904b\u4f5c\u6b63\u5e38 \u90a3\u4f60\u624d\u53ef\u4ee5\u8aaa\u985e\u5225S\u662f\u985e\u5225T\u7684subType"),(0,o.kt)("h3",{parentName:"blockquote",id:"\u6982\u5ff5-2"},"\u6982\u5ff5"),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"\u8981\u641e\u6e05\u695aType\u8ddfSubType\u7684\u95dc\u4fc2\uff0c\u6709\u6642\u5019\u4e0d\u4e00\u5b9a\u5b58\u5728\u7e7c\u627f\u7684\u95dc\u4fc2"),(0,o.kt)("li",{parentName:"ul"},"\u5927\u591a\u6578\u4f60\u4f7f\u7528\u7e7c\u627f\u7684\u5730\u65b9\u90fd\u4e0d\u8a72\u7528\u7e7c\u627f"))),(0,o.kt)("h2",{id:"i-interface-segregation-principleisp-\u4ecb\u9762\u9694\u96e2"},"I: Interface Segregation Principle(ISP) \u4ecb\u9762\u9694\u96e2"),(0,o.kt)("h3",{id:"\u5b9a\u7fa9-3"},"\u5b9a\u7fa9"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"No client should be forced to depend on methods it does not use.")),(0,o.kt)("h2",{id:"d-dependency-inversion-principledip-\u4f9d\u8cf4\u53cd\u8f49"},"D: Dependency Inversion Principle(DIP) \u4f9d\u8cf4\u53cd\u8f49"),(0,o.kt)("h3",{id:"\u5b9a\u7fa9-4"},"\u5b9a\u7fa9"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"}," A. High-level modules should not depend on low-level modules.\nBoth should depend on abstractions.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"B. Abstractions should not depend on details.\nDetails should depend on abstractions."),(0,o.kt)("h3",{parentName:"blockquote",id:"\u6982\u5ff5-3"},"\u6982\u5ff5")))}b.isMDXComponent=!0}}]);